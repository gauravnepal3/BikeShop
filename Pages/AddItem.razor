
@page "/add-item"
@inject NavigationManager NavManager
<h3 class="mt-2 mb-3">Add Product</h3>
<form class="px-2 py-4 bg-white" @onsubmit="HandleSubmit">
    @if (_errorMessage != null)
        {
            //Displaying error while adding item
        <Messages Message="@_errorMessage" MessageType="Error" />
       }
    <div class="form-floating mb-3">
        <input type="text" class="form-control" id="floatingInput" @bind="_itemName"  placeholder="Type name here">
        <label for="floatingInput">Product Name</label>
    </div>
    <div class="form-floating mb-3">
        <input type="number" class="form-control" id="floatingPassword" @bind="_openingStock" placeholder="Type number here">
        <label for="floatingPassword">Opening Stock</label>
    </div>
    <div class="form-floating mb-3">
        <input type="number" class="form-control" id="floatingPassword" @bind="_minimumRequiredStock" placeholder="Type number here">
        <label for="floatingPassword">Minimum Required Stock</label>
    </div>
    <div class="text-center">
        <button class="btn btn-primary px-5" type="submit">Add</button>
    </div>
</form>

@code {
    [CascadingParameter]
    private GlobalState _gloabalState { get; set; }
    private string _errorMessage { get; set; }
    private string _itemName { get; set; }
    private int _openingStock { get; set; }
    private int _minimumRequiredStock { get; set; }
    private void HandleSubmit()
    {
        _errorMessage = null;
        //Checking if item name is empty
        if (!(string.IsNullOrEmpty(_itemName)))
        {
            try
            {
                ItemsService.AddItem(_gloabalState.CurrentUser.Id, _itemName, _openingStock, _minimumRequiredStock);
                //Redirecting to items page after adding successfully
                NavManager.NavigateTo("/items");
            }catch(Exception e)
            {
                _errorMessage = e.Message;
            }
        }
        else
        {
            _errorMessage="Item Name cannot be empty";
        }

    }
}

